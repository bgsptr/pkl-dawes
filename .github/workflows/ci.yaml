# name: CI/CD docker deploy to google cloud vm instance

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     name : deploy to vm instance 
#     runs-on: ubuntu-latest
#     steps:
#       - name: git checkout
#         uses: actions/checkout@v4
#       - name: use nvm node-js version 20
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20.x'
#       - name: install depedency node js
#         run: npm install
#       - name: run typescript compiler to build
#         # run: tsx // npm run build
#       # - name: test application
#         # run: npm run test

#       - name: login to docker
#         uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}
      
#       - name: build and push to dockerhub
#         # id: push
#         uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
#         with:
#           context: .
#           file: ./Dockerfile
#           push: true
#           tags: ${{ steps.meta.outputs.tags }}

#       - name: authenticate to gcloud and deploy to gcp vm instance
#         uses: google-github-actions/auth@v2
#         with:
#           project_id: ''
#           workload_identity_provider: ''

#       - name: 'Set up Cloud SDK'
#         uses: 'google-github-actions/setup-gcloud@v2'

#       # If you already have a container image, you can omit these steps.
#       - name: 'Docker Auth'
#         uses: 'docker/login-action@v3' # docker/login-action@v3
#         with:
#           username: 'oauth2accesstoken'
#           password: '${{ steps.auth.outputs.auth_token }}'
#           registry: '${{ env.REGION }}-docker.pkg.dev'
    
#       - name: 'Build and Push Container'
#         run: |-
#           DOCKER_TAG="$${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}"
#           docker build --tag "${DOCKER_TAG}" .
#           docker push "${DOCKER_TAG}"

#       # - id: 'deploy'
#       - name: image from cloud source repositories
#         uses: 'google-github-actions/deploy-cloudrun@v2'
#         with:
#           # service: 'hello-cloud-run'
#           # image: image: '${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}'


    